#!/bin/bash
set -eu -o pipefail

# Shorthand for reading env config
function plugin_read_config() {
    local var="BUILDKITE_PLUGIN_SHELLCHECK_${1}"
    local default="${2:-}"
    echo "${!var:-$default}"
}

# Reads either a value or a list from plugin config
function plugin_read_list() {
  local prefix="BUILDKITE_PLUGIN_SHELLCHECK_$1"
  local parameter="${prefix}_0"

  if [[ -n "${!parameter:-}" ]]; then
    local i=0
    local parameter="${prefix}_${i}"
    while [[ -n "${!parameter:-}" ]]; do
      echo "${!parameter}"
      i=$((i+1))
      parameter="${prefix}_${i}"
    done
  elif [[ -n "${!prefix:-}" ]]; then
    echo "${!prefix}"
  fi
}

IFS=$'\n\t'
files=()

# Evaluate all the globs and return the files that exist
for file in $(plugin_read_list FILES) ; do
  if [[ -e $file ]] ; then
    files+=("$file")
  fi
done

if [[ -z ${files:-} ]] ; then
  echo "No files found to shellcheck"
  exit 1
fi

# Read in the options to pass to shellcheck
while IFS=$'\n' read -r option ; do
  options+=("$option")
done < <(plugin_read_list OPTIONS)

# Read in the requested artifact path, if the user wants it uploaded
# (e.g. to be used to create annotations summarizing the results)
artifact=$(plugin_read_config ARTIFACT)
if [ -n "$artifact" ]; then
    mkdir -p "$(dirname $artifact)"
    tee_args=("$artifact")
else
    tee_args=()
fi

echo "+++ Running shellcheck on ${#files[@]} files"
if docker run --rm -v "$PWD:/mnt" --workdir "/mnt" koalaman/shellcheck "${options[@]+${options[@]}}" "${files[@]}" ; then
  echo "Files are ok âœ…"
  exit_code=0
else
  exit_code=1
fi | tee "${tee_args[@]}"

if [ -n "$artifact" ]; then
    buildkite artifact upload "$artifact"
fi

exit $exit_code
